username;date;retweets;favorites;text;geo;mentions;hashtags;id;permalink
practicalswift;2018-03-01 01:49;0;17;"Re-visiting some old fuzzing results: this clang crasher I found almost three years ago still segfaults clang (v7 trunk) ッ $ clang -x c -o /dev/null - <<< 'practicalswift =^ [({ return btc; })];' OK, a bit more prosaic minimized: $ clang -x c -o /dev/null - <<< '_=^[({retur;'";;;;"969147708220104704";https://twitter.com/practicalswift/status/969147708220104704
practicalswift;2018-01-10 12:54;0;1;"I assumed s/HF/HW/ ッ";;;;"951195687152181248";https://twitter.com/practicalswift/status/951195687152181248
practicalswift;2018-01-09 23:11;0;3;"I use the tip address for dogfooding and as a bug bounty. If the amount stored (0.004 BTC currently) is stolen I know that my Bitcoin development machine is compromised and/or that Bitcoin Core contains a serious flaw. Getting that info is worth way way more than the BTC to me ッ";;;;"950988410218516482";https://twitter.com/practicalswift/status/950988410218516482
practicalswift;2018-01-09 22:52;1;1;"Unfortunately Bitcoin Core does not have SegWit wallet support yet, but as soon as @pwuille 's SegWit wallet support PR ( https:// github.com/bitcoin/bitcoi n/pull/11403 … ) is merged I'll update my tip address ッ";;@pwuille;;"950983687348383745";https://twitter.com/practicalswift/status/950983687348383745
practicalswift;2018-01-09 22:51;1;2;"Unfortunately Bitcoin Core does not have SegWit wallet support yet, but as soon as @pwuille 's SegWit wallet support PR ( https:// github.com/bitcoin/bitcoi n/pull/11403 … ) is merged I'll update my tip address ッ";;@pwuille;;"950983512127164416";https://twitter.com/practicalswift/status/950983512127164416
practicalswift;2018-01-09 14:14;47;235;"Sayonara Apple & the Swift compiler project ッ After 1949 commits to the Swift compiler project ( https:// github.com/apple/swift/gr aphs/contributors … ) I'll now focus 100% on c-lightning ( https:// github.com/ElementsProjec t/lightning/graphs/contributors?from=2017-01-01&to=2017-12-31&type=c … ) & Bitcoin Core ( https:// github.com/bitcoin/bitcoi n/graphs/contributors?from=2017-01-01&to=2017-12-31&type=c … ) Let's make Tip: 15n9yZyf73X9Ex3RznCPAxSQzCwAVFJeex";;;;"950853191515721728";https://twitter.com/practicalswift/status/950853191515721728
practicalswift;2017-12-28 13:07;0;4;"I'll start using them as soon as sipa's SegWit wallet support PR ( https:// github.com/bitcoin/bitcoi n/pull/11403 … ) is merged! I'll be part of 0.16.0.";;;;"946487704543473664";https://twitter.com/practicalswift/status/946487704543473664
practicalswift;2017-12-28 08:37;28;56;"Spare time is limited! Which project should I contribute to during 2018? ッ Apple Swift: https:// github.com/apple/swift/gr aphs/contributors?from=2017-01-01&to=2017-12-31&type=c … Tip vote: 13N566anrZc7k3G4nt5t4pQxsYMvZKbU2v Bitcoin Core & c-lightning: https:// github.com/bitcoin/bitcoi n/graphs/contributors?from=2017-01-01&to=2017-12-31&type=c … https:// github.com/ElementsProjec t/lightning/graphs/contributors?from=2017-01-01&to=2017-12-31&type=c … Tip vote: 15n9yZyf73X9Ex3RznCPAxSQzCwAVFJeex";;;;"946419752985157632";https://twitter.com/practicalswift/status/946419752985157632
practicalswift;2017-06-30 12:28;0;1;"Thanks! Added to the compiler_crashers validation test set: https:// github.com/apple/swift/pu ll/10620 …";;;;"880870728886870016";https://twitter.com/practicalswift/status/880870728886870016
practicalswift;2017-06-26 22:19;0;0;"Great! I'd like to add the crash case here https:// github.com/apple/swift/tr ee/master/validation-test/compiler_crashers … too if you allow me (requires Apache licensing) ッ";;;;"879569761704849413";https://twitter.com/practicalswift/status/879569761704849413
practicalswift;2017-06-26 15:05;0;0;"Interesting! Thanks for reporting! OK with licensing the snippet under Apache 2.0? If so I can include it as a test case to get it fixed ッ";;;;"879460544901677057";https://twitter.com/practicalswift/status/879460544901677057
practicalswift;2017-06-04 12:17;2;12;"Less is more! ッ The net effect of my 44 commits merged into bitcoin YTD is -165 lines (+222-387). -1 line per day. https:// github.com/bitcoin/bitcoi n/graphs/contributors?from=2017-01-01&to=2017-05-31&type=c …";;;;"871445903403515905";https://twitter.com/practicalswift/status/871445903403515905
practicalswift;2017-05-27 08:42;1;2;"Even after years of fuzzing it's still fun to check out the findings https:// github.com/apple/swift/pu ll/9957/files … https:// github.com/apple/swift/pu ll/9959/files … https:// github.com/apple/swift/pu ll/9902/files …";;;;"868492734734237696";https://twitter.com/practicalswift/status/868492734734237696
practicalswift;2017-05-27 05:19;2;10;"All currently crashing swiftc crashers were reported <11 mo ago Six crashers left from 2016. Oldest from July '16 https:// github.com/apple/swift/tr ee/master/validation-test/compiler_crashers …";;;;"868441575168389120";https://twitter.com/practicalswift/status/868441575168389120
practicalswift;2017-05-22 23:06;0;1;"I love following your fuzzing efforts! Have you considered fuzzing Bitcoin? See https:// github.com/bitcoin/bitcoi n/issues/10364 … for some ideas";;;;"866898072453996545";https://twitter.com/practicalswift/status/866898072453996545
practicalswift;2017-05-15 22:42;0;0;"That comment was written by @mishaldshah – I just did some gardening work on it :-)";;@mishaldshah;;"864355359363710979";https://twitter.com/practicalswift/status/864355359363710979
practicalswift;2017-05-08 15:16;3;4;"Has Google Project Zero considered auditing bitcoind? Would make an interesting and challenging fight! /cc @benhawkes @taviso @natashenka";;@benhawkes @taviso @natashenka;;"861706398140428288";https://twitter.com/practicalswift/status/861706398140428288
practicalswift;2017-05-08 14:00;0;2;"Help secure the Bitcoin network by adding libFuzzer support + OSS-Fuzz integration. $1k - $20k bounty. https:// github.com/bitcoin/bitcoi n/issues/10364 …";;;;"861687191675830272";https://twitter.com/practicalswift/status/861687191675830272
practicalswift;2017-05-04 13:52;0;0;"That's great! Thanks!";;;;"860235729498230784";https://twitter.com/practicalswift/status/860235729498230784
practicalswift;2017-05-03 12:09;4;6;"Not a single swiftc crasher fixed during the last 30 days. Break the standstill by fixing a crasher today! Join now https:// github.com/apple/swift/tr ee/master/validation-test/compiler_crashers …";;;;"859847422448717824";https://twitter.com/practicalswift/status/859847422448717824
practicalswift;2017-04-23 09:49;0;0;"Nice! Do you know where I can find them?";;;;"856188389133094912";https://twitter.com/practicalswift/status/856188389133094912
practicalswift;2017-04-22 03:35;8;17;"Love Swift? Love reproducible builds? Join the quest for reproducibility in Swift here: https:// github.com/apple/swift/pu ll/8938 … /cc @ReproBuilds @lolamby";;@ReproBuilds @lolamby;;"855731790786551809";https://twitter.com/practicalswift/status/855731790786551809
practicalswift;2017-04-20 14:17;0;0;"Look at this deleted Swift fuzzer hidden in the Swift git repo history git show 38620 or https:// github.com/apple/swift/co mmit/38620ed68fdd2639661e7ce87b141506121ed3b9 … Written by @nadavrot";;@nadavrot;;"855168508203872257";https://twitter.com/practicalswift/status/855168508203872257
practicalswift;2017-04-20 13:02;0;0;"I use a custom fuzzer written by myself! :-)";;;;"855149595445407744";https://twitter.com/practicalswift/status/855149595445407744
practicalswift;2017-04-19 23:21;1;2;"Why doesn't swiftc create bit-identical output on same input? Embedding .swift_modhash and NT_GNU_BUILD_ID in ELF necessary? @ReproBuilds";;@ReproBuilds;;"854943046936530944";https://twitter.com/practicalswift/status/854943046936530944
practicalswift;2017-04-19 13:49;0;1;"Congrats! Love your RB contribs! What are your plans for reproducible builds in Debian land? Will reproducibility be a pkg requirement? :-)";;;;"854799028730638341";https://twitter.com/practicalswift/status/854799028730638341
practicalswift;2017-04-17 10:21;3;13;"Wow! Reproducible builds pioneer Chris Lamb ( @lolamby ) has been elected new Debian project leader! Exciting times for reproducible builds!";;@lolamby;;"854021929522655232";https://twitter.com/practicalswift/status/854021929522655232
practicalswift;2017-03-25 03:36;1;9;"Submitted a PR to remove 0.134 % of the Bitcoin C++ codebase :-) https:// github.com/bitcoin/bitcoi n/pull/10075 … Previous contributions: https:// github.com/bitcoin/bitcoi n/pulls?utf8=%E2%9C%93&q=is%3Apr%20is%3Aclosed%20is%3Amerged%20author%3Apracticalswift …";;;;"845585249958539264";https://twitter.com/practicalswift/status/845585249958539264
practicalswift;2017-03-19 04:06;0;10;"5 swiftc crashers in a tweet! for C in '[.h=_' '&[_=(&_' '(()||()x' 'nil?=nil' '[(t:_._=(';do swiftc -<<<$C 2>&1|egrep swift:|head -1;done";;;;"843418333450059776";https://twitter.com/practicalswift/status/843418333450059776
practicalswift;2017-02-23 14:01;0;3;"My bills for fuzzing hardware has gotten a bit high so I've scaled back the fuzzing efforts and IDE fuzzing in particular ッ";;;;"834886012706914304";https://twitter.com/practicalswift/status/834886012706914304
practicalswift;2017-02-11 05:53;0;9;"Discovered this swiftc crasher by fuzzing: $ swiftc - <<< 'protocol Foo: Self {}' Self evades the circular protocol inheritance check?";;;;"830414339328921600";https://twitter.com/practicalswift/status/830414339328921600
practicalswift;2017-02-10 23:17;0;1;"Excellent summary! Thanks! Seems to be 20 distinct root issues behind the 49 crashers.";;;;"830314808838864898";https://twitter.com/practicalswift/status/830314808838864898
practicalswift;2017-02-10 23:15;0;1;"Nice! Thanks letting me know. This crasher is now a golfer (≤ 10 chars) ッ";;;;"830314233527201793";https://twitter.com/practicalswift/status/830314233527201793
practicalswift;2017-02-07 12:59;0;1;"Yes, they are bashing away 24/7!";;;;"829072003609010177";https://twitter.com/practicalswift/status/829072003609010177
practicalswift;2017-02-07 12:38;0;9;"5 crashers in a tweet: for C in ' #if0 =' '[.h=_' '&[_=(&_' 'nil?=nil' '[(t:_._=('; do swiftc -<<<$C 2>&1|egrep 'Assert|swift::'|head -1;done";;;#if0;"829066902869786625";https://twitter.com/practicalswift/status/829066902869786625
practicalswift;2017-01-12 12:30;1;2;". @esrtweet Porting the NTPsec codebase to a language designed to be safe is a nice idea! Besides Go and Rust, have you considered Swift?";;@esrtweet;;"819642749733502977";https://twitter.com/practicalswift/status/819642749733502977
practicalswift;2017-01-09 14:59;0;1;"Found a counter-example to an assertion from 2011-03 ( @clattner_llvm ). A new record! ッ Previous record 2012-05 ッ https:// github.com/apple/swift/pu ll/6686 …";;@clattner_llvm;;"818593080819335168";https://twitter.com/practicalswift/status/818593080819335168
practicalswift;2017-01-08 13:16;0;1;"My fuzzer has stumbled across a lot of #keyPath crashes recently. Most of them seem to be Linux-only. Root cause? https:// github.com/apple/swift/se arch?utf8=%E2%9C%93&q=keyPath+crash+linux&type=Code …";;;#keyPath;"818204756317507586";https://twitter.com/practicalswift/status/818204756317507586
practicalswift;2017-01-08 12:20;0;3;"Discovered an interesting crash case: $ swiftc - <<< 'Array(_).init()' … Assertion `!base || !base->hasTypeParameter()' failed.";;;;"818190655776321537";https://twitter.com/practicalswift/status/818190655776321537
practicalswift;2017-01-08 04:57;0;0;"Fuzzing generated poetry: $ swiftc - <<< 'nil? as? Int!?' … (anonymous namespace)::FailureDiagnosis::diagnoseAmbiguity(…) … ¯\_(ツ)_/¯";;;;"818079289866383361";https://twitter.com/practicalswift/status/818079289866383361
practicalswift;2017-01-06 12:39;0;4;"Today I dreamt of finding an amazing swiftc crasher for which the back trace miraculously covered almost the entire Swift codebase ッ";;;;"817470649136480256";https://twitter.com/practicalswift/status/817470649136480256
practicalswift;2017-01-03 12:45;0;1;"Nice! Are you fuzzing using @lcamtuf 's afl-fuzz?";;@lcamtuf;;"816384989545791489";https://twitter.com/practicalswift/status/816384989545791489
practicalswift;2017-01-03 11:01;0;0;"It was likely fixed by @xedin in #6489. That PR solved 28518 which seems to be the same issue :-) So fixed if dupe";;@xedin;#6489;"816358878698946560";https://twitter.com/practicalswift/status/816358878698946560
practicalswift;2017-01-03 10:46;0;0;"Thanks for reporting! I think it same issue as https:// github.com/apple/swift/bl ob/master/validation-test/compiler_crashers/28518-anonymous-namespace-verifier-walktoexprpost-swift-expr.swift … ? Hits at place in walkToExprPost";;;;"816355185060675584";https://twitter.com/practicalswift/status/816355185060675584
practicalswift;2017-01-03 10:43;0;1;"Thanks for reporting! This one was fixed very recently, but it was a good find. Keep reporting! ッ";;;;"816354404722937856";https://twitter.com/practicalswift/status/816354404722937856
practicalswift;2016-12-31 16:16;0;2;"Absolutely, they are scheduled for inclusion once master is reopened and the buildbots enter the stage again! ッ";;;;"815350843008499713";https://twitter.com/practicalswift/status/815350843008499713